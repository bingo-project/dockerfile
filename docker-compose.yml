version: "3.8"

networks:
  monitor:
    driver: bridge

services:
  prometheus:
    restart: always
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    user: root
    networks:
      - monitor
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus:/etc/prometheus
      - ./data/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=3d"
      - "--web.enable-lifecycle"

  pushgateway:
    restart: always
    image: prom/pushgateway
    container_name: pushgateway
    hostname: pushgateway
    user: root
    depends_on:
      - prometheus
    networks:
      - monitor
    ports:
      - 9091:9091
    volumes:
      - ./config/pushgateway:/etc/pushgateway
      - ./data/prometheus/pushgateway:/var/lib/pushgateway

  alertmanager:
    restart: always
    image: prom/alertmanager
    container_name: alertmanager
    hostname: alertmanager
    user: root
    depends_on:
      - prometheus
    networks:
      - monitor
    ports:
      - 9093:9093
    volumes:
      - ./config/alertmanager:/etc/alertmanager
      - ./data/prometheus/alertmanager:/var/lib/alertmanager
  
  node_exporter:
    restart: always
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    hostname: node_exporter
    user: root
    depends_on:
      - prometheus
    networks:
      - monitor
    pid: host
    ports:
      - 9100:9100
    volumes:
      - '/:/host:ro,rslave'
    command:
      - '--path.rootfs=/host'

  cadvisor:
    restart: always
    image: google/cadvisor
    container_name: cadvisor
    hostname: cadvisor
    user: root
    depends_on:
      - prometheus
    networks:
      - monitor
    ports:
        - "9180:8080"
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    restart: always
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    user: root
    depends_on:
      - prometheus
    networks:
      - monitor
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana:/var/lib/grafana

  loki:
    restart: always
    image: grafana/loki
    container_name: loki
    hostname: loki
    user: root
    networks:
      - monitor
    ports:
      - 3100:3100
    volumes:
      - ./config/loki:/etc/loki
      - ./data/loki:/loki
    command:
      - "-config.file=/etc/loki/loki.yml"

  promtail:
    restart: always
    image: grafana/promtail
    container_name: promtail
    hostname: promtail
    user: root
    networks:
      - monitor
    volumes:
      - ./config/promtail:/etc/promtail
      - ./data/promtail:/promtail
      - /var/log/nginx:/var/log/nginx
      - ../app/log:/var/log/app # your app log path
    command:
     - "-config.file=/etc/promtail/promtail.yml"
